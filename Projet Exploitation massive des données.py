#Antro Comlan-koumi
#Sofiane Hamza
#Mouhamadou Moustapha Niang
 

import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt

from sklearn.linear_model import LinearRegression

 

#Récupération de données GOOGLE
#_______________________________

googl = yf.Ticker("GOOGL")
#On obtiens les données historiques du marché de l'action
historical_data = googl.history(period="max")
print("les données historiques du marché de l'action GOOGLE depuis 19/08/2004\n")
print(historical_data)


#Traitement de données
#______________________
 
#Suppression des lignes avec des valeurs manquantes

historical_data.dropna(inplace=True)
print("Close : Le prix de clôture de l'action pour la date spécifiée")
print(historical_data[['Close']])

# Calculer les rendements du prix de l'action avec la fonction pct_change()
historical_data['returns'] = historical_data['Close'].pct_change()
print("Returns : le rendement du prix de l'action calculé en fonction de 'Close'")
print(historical_data[['returns']] )

#Suppression des lignes avec des valeurs manquantes
historical_data.dropna(inplace=True)

 
#Création et entrainement du model de prédiction
#_________________________________________________
 
# On divise les données en caractéristiques d'entrée et variable cible
X = historical_data['Close'].values.reshape(-1, 1)
y = historical_data['returns'].values

#On entraîne le modèle de régression linéaire
model = LinearRegression().fit(X, y)

  

#Prédiction
#___________
 
# Obtenir les 10 prochains jours de prix des actions
next_10_days = np.array([i for i in range(int(X[-1, 0]), int(X[-1, 0]+10))]).reshape(-1, 1)

#On utilise le modèle pour faire des prédictions
predictions = model.predict(next_10_days)
print("Prédiction des rendements des 10 prochains jours")
print(predictions)

#Affichage
#__________

closing_prices = []
last_close = historical_data['Close'].values[-1]
for r in predictions:
    last_close = last_close * (1 + r)
    closing_prices.append(last_close)

print("Prédiction du prix des actions des 10 prochains jours")
print(closing_prices)

 
#On trace les prix de clôture prédits

plt.plot(closing_prices)
plt.xlabel('Jour')
plt.ylabel('Prix de clôture')
plt.title('Prix de clôture prédits')
plt.show()

